#!/usr/bin/env node

/**
 * Module dependencies
 */

var program = require('commander')
  , grunt   = require('grunt')
  , findup  = require('findup-sync')
  , path    = require('path')
  , open    = require('open')
  , pjson   = require('../package.json')
  , _       = require('underscore')
  , glob    = require('glob')
  , gtPath  = findup('gt.json')
  , root    = path.dirname(gtPath)
  , cf      = require(gtPath)
  , pcf     = require('../conf/programConfig');

/**
 * Set default configs
 */

var defaultConfigs = {
  folder              : pcf.DEFAULT_FOLDER,
  requirejs           : pcf.DEFAULT_REQUIREJS,
  translationFunction : pcf.DEFAULT_TRANSLATION_FUNCTION,
  src                 : pcf.DEFAULT_SRC,
  port                : pcf.DEFAULT_PORT,
  autoOpen            : pcf.DEFAULT_AUTO_OPEN,
  root                : root
};
if(typeof cf.output === 'undefined') {
  cf.output = cf.folder + pcf.DEFAULT_OUTPUT;
}
// Merge with programConfigs
defaultConfigs = _.extend(defaultConfigs, pcf);
cf = _.defaults(cf, defaultConfigs);

/**
 * Set short-cuts configs
 */

cf.localesFolder     = cf.folder + pcf.LOCALES_FOLDER;
cf.deleteLog         = cf.folder + pcf.DELETE_LOG_FILE;
cf.latestSearchFile  = cf.folder + pcf.LATEST_SEARCH_CACHE_FILE;
cf.language          = cf.language || pcf.DEFAULT_LANGAUGE;


lcf = require('../plugins/' + cf.language + '/parseConfigs');

/**
 * Get all source files.
 */

var src = [], _files, add, removes;
for(var i = 0; i < cf.src.length; i++) {
  if(cf.src[i].substr(0, 1) !== '!') {
    adds = glob.sync(cf.src[i], { cwd: root });
    src  = src.concat(adds);
  } else {
    removes = glob.sync(files[i].substr(1), { cwd: root });
    src     = src.filter(function(file) {
      return removes.indexOf(file) === -1;
    });
  }
}
cf.src = src;

/**
 * Set cf as global.
 */

GLOBAL.cf  = cf;
GLOBAL.pcf = pcf;
GLOBAL.lcf = lcf;

/**
 * Check minimum configs.
 */

if(typeof cf.defaultLocale === 'undefined') {
  grunt.log.error('You must define defaultLocale in .gt');
}
if(typeof cf.locales === 'locales') {
  grunt.log.error('You must define your locales in ' + cf.folder + '/locales.json');
}

var gt = require('../lib')
program
  .version(pjson.version)
  .option('-l, --lang <lang>', 'specify the language', String, cf.defaultLocale)
  .option('-p, --port <port>', 'specify the port [\'' + cf.port + '\']', Number, cf.port)

program
  .command('init')
  .description('Initialize a new GetTranslation project')
  .action(function() {
    // No initialize service yet
  });

program
  .command('interface')
  .description('Starts the translation interface')
  .action(function() {
    var server = require('../app/server');
    server.server();
  });

program
  .command('search [q]')
  .description('Search translation keys and values')
  .action(function(q) {
    if(typeof q === 'undefined') {
      grunt.log.error('You need to provide a query in your search. E.g. gt search "some query"');
      return false;
    }
    gt.search(q);
  });

program
  .command('log')
  .description('Get the latest translations')
  .action(function() {
    gt.log(this.lang);
  });

program
  .command('update')
  .description('Update translation keys from source')
  .action(function() {
    gt.update();
  });

program
  .command('compile')
  .description('Compile transations')
  .action(function() {
  });

program
  .command('edit')
  .description('Edit transations')
  .action(function() {

  });


program.parse(process.argv);


